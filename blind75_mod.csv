Question Number,Question Name,Array,Difficulty,Completed,Solution Notes,Runtime,Description
1, Two Sum,Array,Easy,X,"Create hashmap for compliment solution, run through list of nums checking if compliment is in map if yes return indices, if not add to map",O(N),"Two Sum - Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order."
4, Container With Most Water,Array,Medium,X,"2 Pointer, while l<r. Move pointer with lower height.",O(N),"Container With Most Water - You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container."
5, 3Sum,Array,Medium,X,"Sort list, for every unique num. move left and right point if sum is too small or great, add ans if achieved. ",O(N^2),"3Sum - Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.

Notice that the solution set must not contain duplicate triplets."
14, Maximum Subarray,Array,Medium,X,"Current = first element, max = max element. For every num if the curr total is < 0 reset to 0 else add the num to curr and update max if necessary",O(N),"Maximum Subarray - Given an integer array nums, find the subarray with the largest sum, and return its sum."
38, Maximum Product Subarray,Array,Medium,X,"For every element in array keep track of min and max product and update with each number, keep a global max to return. ",O(N),"Maximum Product Subarray - Given an integer array nums, find a subarray that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer."
39, Find Minimum in Rotated Sorted Array,Array,Medium,X,"if mid-1 >mid or mid+1<mid return mid/mid+1. Else check if l<mid and move l to mid+1, else move r to mid-1.",Log(N),"Find Minimum in Rotated Sorted Array - Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become:

 * [4,5,6,7,0,1,2] if it was rotated 4 times.
 * [0,1,2,4,5,6,7] if it was rotated 7 times.

Notice that rotating an array [a[0], a[1], a[2], ..., a[n-1]] 1 time results in the array [a[n-1], a[0], a[1], a[2], ..., a[n-2]].

Given the sorted rotated array nums of unique elements, return the minimum element of this array.

You must write an algorithm that runs in O(log n) time."
55, Product of Array Except Self,Array,Medium,X,"Count product of array without 0s and num of 0s. If num 0s >1, return all 0s. If a 0 and this num isnt 0 append 0. if num is 0 append product, else append product/number",O(N),"Product of Array Except Self - Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation."
10, Search in Rotated Sorted Array,"Array, DP",Medium,X,While l<=r: if mid = target return. If l<mid then check if target is in range of l and mid and change r. Else change l. Else check if target inbetween mid and r and change l else change r.,O(log(n)),"Search in Rotated Sorted Array - There is an integer array nums sorted in ascending order (with distinct values).

Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2].

Given the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.

You must write an algorithm with O(log n) runtime complexity."
30, Best Time to Buy and Sell Stock,"Array, Hashtable",Easy,X,loop over prices if price is lowest so far set buy to price otherwise check if maxProfit is less than price-buy,O(N),"Best Time to Buy and Sell Stock - You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0."
50, Contains Duplicate,Binary,Easy,X,"Use hashtable, loop if in hash return True. OR compare len of set(nums) to len of nums",O(N),"Contains Duplicate - Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct."
40, Reverse Bits,Binary,Easy,,,,"Reverse Bits - Reverse bits of a given 32 bits unsigned integer.

Note:

 * Note that in some languages, such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.
 * In Java, the compiler represents the signed integers using 2's complement notation [https://en.wikipedia.org/wiki/Two%27s_complement]. Therefore, in"
41, Number of 1 Bits,Binary,Easy,,,,"Number of 1 Bits - Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight [http://en.wikipedia.org/wiki/Hamming_weight]).

Note:

 * Note that in some languages, such as Java, there is no unsigned integer type. In this case, the input will be given as a signed integer type. It should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.
 * In Java, the compiler represents the signed integers using 2's complement notation [https://en.wikipedia.org/wiki/Two%27s_complement]. Therefore, in"
60, Missing Number,Binary,Easy,X,n(n+1)/2 - sum(nums),O(N),"Missing Number - Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array."
67, Counting Bits,Binary,Easy,,,,"Counting Bits - Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i."
69, Sum of Two Integers,Binary,Medium,,,,"Sum of Two Integers - Given two integers a and b, return the sum of the two integers without using the operators + and -."
3, Longest Palindromic Substring,DP,Medium,X,Expand around center of 1 or 2 chars while outer 2 char in bound and equal for each char in s. Return longest.,O(N^2),"Longest Palindromic Substring - Given a string s, return the longest palindromic substring in s."
11, Combination Sum,DP,Medium,,,,"Combination Sum - Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.

The same number may be chosen from candidates an unlimited number of times. Two combinations are unique if the frequency of at least one of the chosen numbers is different.

The test cases are generated such that the number of unique combinations that sum up to target is less than 150 combinations for the given input."
16, Jump Game,DP,Medium,X,for every num if it can be reached up longest with max of longest and num+jump distance. If num cant be reached return false. Return true if last node reached.,O(N),"Jump Game - You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.

Return true if you can reach the last index, or false otherwise."
19, Unique Paths,DP,Medium,X,"If out of bounds return 0, if end of path return 1, else return dp of down a square + dp of right a square. Use lru_cache for effencies.",O(N*M),"Unique Paths - There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time.

Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner.

The test cases are generated so that the answer will be less than or equal to 2 * 109."
20, Climbing Stairs,DP,Medium,X,"If n ==1, return 1 elif n==2, return 2 else return helper(n-1)+helper(n-2). Store results in a hashtable. OR use fibonci numbers",O(N),"Climbing Stairs - You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?"
24, Decode Ways,DP,Medium,X,"create array of ans, for every num add the answer to the problem of num before. If 9<num and num before<27 add answer of 2 before as well. Return last in array of answers.",O(N),"Decode Ways - A message containing letters from A-Z can be encoded into numbers using the following mapping:


'A' -> ""1""
'B' -> ""2""
...
'Z' -> ""26""


To decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, ""11106"" can be mapped into:

 * ""AAJF"" with the grouping (1 1 10 6)
 * ""KJF"" with the grouping (11 10 6)

Note that the grouping (1 11 06) is invalid because ""06"" cannot be mapped into 'F' since ""6"" is different from ""06"".

Given a string s containing only digits, return the number of ways to decode it.

The test cases are generated so that the answer fits in a 32-bit integer."
35, Word Break,DP,Medium,X,"Bottomup: create array size of word, for every word in dict check if it matches current string, if so update ith element in arr to 1. for every 1 in arr run dictt words again. Check if last element 1.",O(len(s)*DictWord),"Word Break - Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words.

Note that the same word in the dictionary may be reused multiple times in the segmentation."
42, House Robber,DP,Medium,X,Max on current house plus DP on position+2 and DP on position+1. If second to end return max of 2. if end return end.,O(N),"House Robber - You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night.

Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police."
49, House Robber II,DP,Medium,X,Do House Robber but take max between houses - first house and houses - last house,O(N),"House Robber II - You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and it will automatically contact the police if two adjacent houses were broken into on the same night.

Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police."
64, Longest Increasing Subsequence,DP,Medium,X,"DP map keep track of longest starting at end and if num is less than curr, update DP. Create array add first num, for remaining nums if num is higher than last add to array else replace last num in array. Can use Binary Search to speed up.",O(N^2) / O(nLog(N)),"Longest Increasing Subsequence - Given an integer array nums, return the length of the longest strictly increasing subsequence."
65, Coin Change,DP,Medium,X,Bottomup: Create array size target+1 and set each index to target+1. For each coin check if target can be made in fewer coins by using that coin and previous answer. ,O(Coins*Target),"Coin Change - You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money.

Return the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.

You may assume that you have an infinite number of each kind of coin."
76, Longest Common Subsequence,DP,Medium,X,,,"Longest Common Subsequence - Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0.

A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.

 * For example, ""ace"" is a subsequence of ""abcde"".

A common subsequence of two strings is a subsequence that is common to both strings."
33, Longest Consecutive Sequence,DP,Medium,X,Create set from nums. For each num check if previous num is in set. If not then check for consecutive numbers. This makes no duplicate sequences.,O(N),"Longest Consecutive Sequence - Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time."
34, Clone Graph,Graph,Medium,,,,"Clone Graph - Given a reference of a node in a connected [https://en.wikipedia.org/wiki/Connectivity_(graph_theory)#Connected_graph] undirected graph.

Return a deep copy [https://en.wikipedia.org/wiki/Object_copying#Deep_copy] (clone) of the graph.

Each node in the graph contains a value (int) and a list (List[Node]) of its neighbors.


class Node {
    public int val;
    public List<Node> neighbors;
}


 

Test case format:

For simplicity, each node's value is the same as the node's index (1-indexed). For example, the first node with val == 1, the second node with val == 2, and so on. The graph is represented in the test case using an adjacency list.

An adjacency list is a collection of unordered lists used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.

The given node will always be the first node with val = 1. You must return the copy of the given node as a reference to the cloned graph."
43, Number of Islands,Graph,Medium,X,"Use dfs on every point, if 1 and not in visited add an island and run dfs.",O(N*M),"Number of Islands - Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.

An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water."
45, Course Schedule,Graph,Medium,,,,"Course Schedule - There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai.

 * For example, the pair [0, 1], indicates that to take course 0 you have to first take course 1.

Return true if you can finish all courses. Otherwise, return false."
70, Pacific Atlantic Water Flow,Graph,Medium,,,,"Pacific Atlantic Water Flow - There is an m x n rectangular island that borders both the Pacific Ocean and Atlantic Ocean. The Pacific Ocean touches the island's left and top edges, and the Atlantic Ocean touches the island's right and bottom edges.

The island is partitioned into a grid of square cells. You are given an m x n integer matrix heights where heights[r][c] represents the height above sea level of the cell at coordinate (r, c).

The island receives a lot of rain, and the rain water can flow to neighboring cells directly north, south, east, and west if the neighboring cell's height is less than or equal to the current cell's height. Water can flow from any cell adjacent to an ocean into the ocean.

Return a 2D list of grid coordinates result where result[i] = [ri, ci] denotes that rain water can flow from cell (ri, ci) to both the Pacific and Atlantic oceans."
63, Find Median from Data Stream,Heap,Medium,,,,"Find Median from Data Stream - The median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value, and the median is the mean of the two middle values.

 * For example, for arr = [2,3,4], the median is 3.
 * For example, for arr = [2,3], the median is (2 + 3) / 2 = 2.5.

Implement the MedianFinder class:

 * MedianFinder() initializes the MedianFinder object.
 * void addNum(int num) adds the integer num from the data stream to the data structure.
 * double findMedian() returns the median of all elements so far. Answers within 10-5 of the actual answer will be accepted."
68, Top K Frequent Elements,Heap,Medium,X,count occurance of each num in dictionary. Use priority qeue to pop top k elements by value.,O(Nlog(k)),"Top K Frequent Elements - Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order."
17, Merge Intervals,Intervals,Medium,X,"Sort intervals by start time, for each interval check if starts after previous ends, ends after previous, or is encompassed by previous. Extra space for answer.",O(nLog(n)),"Merge Intervals - Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input."
18, Insert Interval,Intervals,Medium,X,"Add newInterval, sort by start value, remove overlapping intervals. Use extra space for answer. Can do in O(N) with extra space.",O(nLog(n)),"Insert Interval - You are given an array of non-overlapping intervals intervals where intervals[i] = [starti, endi] represent the start and the end of the ith interval and intervals is sorted in ascending order by starti. You are also given an interval newInterval = [start, end] that represents the start and end of another interval.

Insert newInterval into intervals such that intervals is still sorted in ascending order by starti and intervals still does not have any overlapping intervals (merge overlapping intervals if necessary).

Return intervals after the insertion."
72, Non-overlapping Intervals,Intervals,Medium,X,"Sort intervals by start time, for each check if previous end is after curr start, If so add 1 to ans then update curr end time to be least of prev and curr.",O(nLog(n)),"Non-overlapping Intervals - Given an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping."
6, Remove Nth Node From End of List,Linked List,Easy,X,Fast pointer advance to N nodes ahead. Advance slow pointer and fast pointer until fast pointer hits null. Then skip next node on slow.,O(N),"Remove Nth Node From End of List - Given the head of a linked list, remove the nth node from the end of the list and return its head."
8, Merge Two Sorted Lists,Linked List,Medium,X,"Create new empty list, while both lists add smaller element then add rest of nonempty list.",O(N+M),"Merge Two Sorted Lists - You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list."
9, Merge k Sorted Lists,Linked List,Hard,X,Divide and conquer using merge 2 sorted lists,O(Nlog(k)),"Merge k Sorted Lists - You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it."
36, Linked List Cycle,Linked List,Medium,X,"Use fast and slow pointer, if equal return cycle, if one pointer null return no cycle",O(N),"Linked List Cycle - Given head, the head of a linked list, determine if the linked list has a cycle in it.

There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter.

Return true if there is a cycle in the linked list. Otherwise, return false."
37, Reorder List,Linked List,Medium,,,,"Reorder List - You are given the head of a singly linked-list. The list can be represented as:


L0 → L1 → … → Ln - 1 → Ln


Reorder the list to be on the following form:


L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …


You may not modify the values in the list's nodes. Only nodes themselves may be changed."
44, Reverse Linked List,Linked List,Easy,X,"Prev=None, cur=head. While cur: next = cur.next, cur.next=prev, prev=cur, cur=next. Return prev",O(N),"Reverse Linked List - Given the head of a singly linked list, reverse the list, and return the reversed list."
12, Rotate Image,Matrix,Medium,,,,"Rotate Image - You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place [https://en.wikipedia.org/wiki/In-place_algorithm], which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation."
15, Spiral Matrix,Matrix,Medium,,,,"Spiral Matrix - Given an m x n matrix, return all elements of the matrix in spiral order."
21, Set Matrix Zeroes,Matrix,Medium,,,,"Set Matrix Zeroes - Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place [https://en.wikipedia.org/wiki/In-place_algorithm]."
23, Word Search,String,Hard,,,,"Word Search - Given an m x n grid of characters board and a string word, return true if word exists in the grid.

The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once."
7, Valid Parentheses,String,Easy,X,"Use stack to keep track of opening, if closing not top of stack return false. If stack not empty at end return false. Use dictionary to map openning/closing",O(N),"Valid Parentheses - Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

 1. Open brackets must be closed by the same type of brackets.
 2. Open brackets must be closed in the correct order.
 3. Every close bracket has a corresponding open bracket of the same type."
13, Group Anagrams,String,Medium,X,Use unique prime for each char in each string. Find product and use as key of hashmap for each group,O(N*M),"Group Anagrams - Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once."
22, Minimum Window Substring,String,Medium,,,,"Minimum Window Substring - Given two strings s and t of lengths m and n respectively, return the minimum window substring of s such that every character in t (including duplicates) is included in the window. If there is no such substring, return the empty string """".

The testcases will be generated such that the answer is unique."
56, Valid Anagram,String,Medium,X,"Create hashmap with all chars from first string and their count, remove them for each occurance in second string if hashmap empty return false. If char not in hashmap return false",O(N+M),"Valid Anagram - Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once."
71, Longest Repeating Character Replacement,String,Medium,X,"Dict of freq of chars, keep l, r pointer. Move r constantly, add r char to freq, if freq-l+r+1>k move l otherwise don’t, take max of ans and r-l+1.",O(N),"Longest Repeating Character Replacement - You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.

Return the length of the longest substring containing the same letter you can get after performing the above operations."
75, Palindromic Substrings,"String, Sliding Window",Medium,X,Def function to count palandroms starting from center. Call function on each char in string and take sum of all results.,O(N^2),"Palindromic Substrings - Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string."
2, Longest Substring Without Repeating Characters,Topic,Easy,X,"Map for last time each char was used, loop through string and if char used more recently than start of current substring move start to last use of char + 1, update longest if needed",O(N),"Longest Substring Without Repeating Characters - Given a string s, find the length of the longest substring without repeating characters."
25, Validate Binary Search Tree,Tree,Easy,X,"If not node return True. Else set min and max vals to None and if val is out of min, max, return false otherwise recursively call left and right changing min and max ",O(N),"Validate Binary Search Tree - Given the root of a binary tree, determine if it is a valid binary search tree (BST).

A valid BST is defined as follows:

 * The left subtree of a node contains only nodes with keys less than the node's key.
 * The right subtree of a node contains only nodes with keys greater than the node's key.
 * Both the left and right subtrees must also be binary search trees."
26, Same Tree,Tree,Easy,X,"Use dfs to check if each node is the same in both tree. Dfs should take 2 nodes, one from each tree.",O(N),"Same Tree - Given the roots of two binary trees p and q, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical, and the nodes have the same value."
27, Binary Tree Level Order Traversal,Tree,Medium,X,Use bfs but don’t update q with children until q is empty. Use separate array to store curr next and nextLevel,O(N),"Binary Tree Level Order Traversal - Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level)."
28, Maximum Depth of Binary Tree,Tree,Easy,X,If root is none return 0 otherwise return 1+max of recursive call of left and right node.,O(N),"Maximum Depth of Binary Tree - Given the root of a binary tree, return its maximum depth.

A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node."
29, Construct Binary Tree from Preorder and Inorder Traversal,Tree,Hard,,,,"Construct Binary Tree from Preorder and Inorder Traversal - Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree."
31, Binary Tree Maximum Path Sum,Tree,Hard,,,,"Binary Tree Maximum Path Sum - A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.

The path sum of a path is the sum of the node's values in the path.

Given the root of a binary tree, return the maximum path sum of any non-empty path."
46, Implement Trie (Prefix Tree),Tree,Medium,X,"Create TrieNode class with map children and boolean endWord. Insert each char and add TrieNode if not in children, mark end of word. Search children by children",X,Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.
47, Design Add and Search Words Data Structure,Tree,Medium,X,Create TrieNode class. Add word like Implement Trie. Search if '.' for all children of node call,Add O(all letters of all words) SearchO(height) for no .,"Design Add and Search Words Data Structure - Design a data structure that supports adding new words and finding if a string matches any previously added string.

Implement the WordDictionary class:

 * WordDictionary() Initializes the object.
 * void addWord(word) Adds word to the data structure, it can be matched later.
 * bool search(word) Returns true if there is any string in the data structure that matches word or false otherwise. word may contain dots '.' where dots can be matched with any letter."
48, Word Search II,Tree,Medium,,,,"Word Search II - Given an m x n board of characters and a list of strings words, return all words on the board.

Each word must be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word."
51, Invert Binary Tree,Tree,Medium,X,"Set root.right to self.invertTree(right,left) and vica versa",O(N),"Invert Binary Tree - Given the root of a binary tree, invert the tree, and return its root."
52, Kth Smallest Element in a BST,Tree,Medium,,,,"Kth Smallest Element in a BST - Given the root of a binary search tree, and an integer k, return the kth smallest value (1-indexed) of all the values of the nodes in the tree."
53, Lowest Common Ancestor of a Binary Search Tree,Tree,Easy,X,If q/p of different sides of root return root else move down. If root = p or q return p or q.,O(H),"Lowest Common Ancestor of a Binary Search Tree - Given a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST.

According to the definition of LCA on Wikipedia [https://en.wikipedia.org/wiki/Lowest_common_ancestor]: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”"
54, Lowest Common Ancestor of a Binary Tree,Tree,Medium,X,"Use dfs, if node then check left and right trees if 2 of curr, left or right are targets then curr node is ans, else if one of them return true else return false. Use var to store ans with init.",O(N),"Lowest Common Ancestor of a Binary Tree - Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.

According to the definition of LCA on Wikipedia [https://en.wikipedia.org/wiki/Lowest_common_ancestor]: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”"
73, Serialize and Deserialize BST,Tree,Medium,,,,"Serialize and Deserialize BST - Serialization is converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.

Design an algorithm to serialize and deserialize a binary search tree. There is no restriction on how your serialization/deserialization algorithm should work. You need to ensure that a binary search tree can be serialized to a string, and this string can be deserialized to the original tree structure.

The encoded string should be as compact as possible."
74, Subtree of Another Tree,Tree,Easy,X,Function checks if each tree =  subtree recursively. Call sameTree function recursively on all nodes of tree.,O(T*ST),"Subtree of Another Tree - Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.

A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself."
32, Valid Palindrome,Two Pointer,Easy,X,while left < right the check if char is alnum in while loop and if chars don’t match return false else change r/l.,O(N),"Valid Palindrome - A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise."
